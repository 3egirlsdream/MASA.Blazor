@page "/"

<MButton OnClick="() => value = !value">Toggle to @(!value)</MButton>

<MListGroup @bind-Value="value" NoAction>
    <ActivatorContent>
        <MListItemContent>
            <MListItemTitle>Admin</MListItemTitle>
        </MListItemContent>
    </ActivatorContent>
    <ChildContent>
        @foreach (var item in _admins)
        {
        <MListItem Link>
            <MListItemTitle>@item.Text</MListItemTitle>

            <MListItemIcon>
                <MIcon>@item.Icon</MIcon>
            </MListItemIcon>
        </MListItem>
        }
    </ChildContent>
</MListGroup>

@code{
readonly Item[] _admins = new Item[]
{
new Item { Text= "Management", Icon= "mdi-account-multiple-outline" },
new Item { Text= "Settings", Icon= "mdi-cog-outline" }
};

readonly Item[] _cruds = new Item[]
{
new Item { Text= "Create", Icon= "mdi-plus-outline" },
new Item { Text= "Read", Icon= "mdi-file-outline" },
new Item { Text= "Update", Icon= "mdi-update" },
new Item { Text= "Delete", Icon= "mdi-delete" }
};

bool userExpanded = true;
bool adminExpanded = true;

class Item
{
public string Text { get; set; }
public string Icon { get; set; }
}
}

@* <div class="text-center"> *@
@*     <MMenu OffsetY> *@
@*         <ActivatorContent> *@
@*             <MButton Color="primary" @attributes="@context.Attrs">DROPDOWN</MButton> *@
@*         </ActivatorContent> *@
@* *@
@*         <ChildContent> *@
@*             <MList> *@
@*                 @foreach (var item in items) *@
@*                 { *@
@*                     <MListItem> *@
@*                         <MListItemContent> *@
@*                             <MListItemTitle> *@
@*                                 @item *@
@*                             </MListItemTitle> *@
@*                         </MListItemContent> *@
@*                     </MListItem> *@
@*                 } *@
@*             </MList> *@
@*         </ChildContent> *@
@*     </MMenu> *@
@* </div> *@

@* <MTransition Name="fade-transition"> *@
@*     <Button TransitionIf="@value">a button here</Button> *@
@* </MTransition> *@
@* *@
@* <Transition Name="fab-transition"> *@
@*     <IfTransitionElement Value="@value"> *@
@*         <MCard Outlined> *@
@*             <MCardText> *@
@*                 <h1>Why choose MASA Blazor 1?</h1> *@
@*                 <p class="info--text"> *@
@*                     MASA Blazor is based on Material design specifications, and each component is carefully designed, with modularity, responsiveness and excellent performance. *@
@*                     MASA Blazor is regularly maintained and upgraded by a professional full-time technical team, efficient response speed, diversified solutions, and enterprise-level support. At present, it has been used in well-known companies, and the MASA Stack product line developed by the MASA team will continue to be used. In addition to ensuring the quality of the project, it can also continue to add new components and functions. *@
@*                     In addition to providing developers with many middle- and Taiwan-based open source projects, MASA Stack, one of its most basic components, MASA Blazor, also hopes to be the most practical component library. *@
@*                 </p> *@
@*             </MCardText> *@
@*         </MCard> *@
@*     </IfTransitionElement> *@
@* </Transition> *@

@* <MTransition Name="fab-transition"> *@
@*     <MIfTransitionElement Value="@value"> *@
@*         <MCard Outlined> *@
@*             <MCardText> *@
@*                 <h1>Why choose MASA Blazor 2?</h1> *@
@*                 <p class="info--text"> *@
@*                     MASA Blazor is based on Material design specifications, and each component is carefully designed, with modularity, responsiveness and excellent performance. *@
@*                     MASA Blazor is regularly maintained and upgraded by a professional full-time technical team, efficient response speed, diversified solutions, and enterprise-level support. At present, it has been used in well-known companies, and the MASA Stack product line developed by the MASA team will continue to be used. In addition to ensuring the quality of the project, it can also continue to add new components and functions. *@
@*                     In addition to providing developers with many middle- and Taiwan-based open source projects, MASA Stack, one of its most basic components, MASA Blazor, also hopes to be the most practical component library. *@
@*                 </p> *@
@*             </MCardText> *@
@*         </MCard> *@
@*     </MIfTransitionElement> *@
@* </MTransition> *@

@* <MTransition Name="fab-transition"> *@
@*     <MShowTransitionElement Value="@value"> *@
@*         <MCard Outlined> *@
@*             <MCardText> *@
@*                 <h1>Why choose MASA Blazor 2?</h1> *@
@*                 <p class="info--text"> *@
@*                     MASA Blazor is based on Material design specifications, and each component is carefully designed, with modularity, responsiveness and excellent performance. *@
@*                     MASA Blazor is regularly maintained and upgraded by a professional full-time technical team, efficient response speed, diversified solutions, and enterprise-level support. At present, it has been used in well-known companies, and the MASA Stack product line developed by the MASA team will continue to be used. In addition to ensuring the quality of the project, it can also continue to add new components and functions. *@
@*                     In addition to providing developers with many middle- and Taiwan-based open source projects, MASA Stack, one of its most basic components, MASA Blazor, also hopes to be the most practical component library. *@
@*                 </p> *@
@*             </MCardText> *@
@*         </MCard> *@
@*     </MShowTransitionElement> *@
@* </MTransition> *@

@code {

    private bool value;

    string[] items =
    {
        "Click Me",
        "Click Me",
        "Click Me",
        "Click Me 2"
    };

}